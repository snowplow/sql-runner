name: Deploy

on:
  push:
    tags:
    - '*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-20.04

    env:
      BINTRAY_SNOWPLOW_GENERIC_USER: ${{ secrets.BINTRAY_SNOWPLOW_GENERIC_USER }}
      BINTRAY_SNOWPLOW_GENERIC_API_KEY: ${{ secrets.BINTRAY_SNOWPLOW_GENERIC_API_KEY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.15'

    - name: Launch the docker-compose stack
      run: make setup-up

    - name: Build
      run: make

    - name: Test and send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        make
        make goveralls
        DISTRO=linux make integration

    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies and update PATH
      run: |
        python -m pip install --upgrade pip
        sudo pip install pyOpenSSL==16.2.0
        pip install --user release-manager==0.4.1
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Get tag and sql-runner version information
      id: version
      run: |
        echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/*/}
        echo "##[set-output name=SQL_RUNNER_VERSION;]$(cat VERSION)"

    - name: Upload to bintray
      env:
        TAG_VERSION: ${{ steps.version.outputs.TAG_VERSION }}
        SQL_RUNNER_VERSION: ${{ steps.version.outputs.SQL_RUNNER_VERSION }}
      run: make release

    - name: Get date for release name
      id: date
      run: echo "RELEASE_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Create release
      if: ${{ ! contains(steps.version.outputs.TAG_VERSION, '-rc') }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Version ${{ github.ref }} (${{ env.RELEASE_DATE }})
        draft: false
        prerelease: false
