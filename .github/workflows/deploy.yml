name: Deploy

on:
  push:
    tags:
    - '*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.17'

    - name: Launch the docker-compose stack
      run: make setup-up

    - name: Build
      run: make

    - name: Test and send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        make
        make goveralls
        DISTRO=linux make integration

    - name: Get tag and sql-runner version information
      id: version
      run: |
        echo "TAG_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
        echo "SQL_RUNNER_VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

    - name: Fail if version mismatch
      if: ${{ steps.version.outputs.TAG_VERSION != steps.version.outputs.SQL_RUNNER_VERSION }}
      run: |
        echo "Tag version (${{ steps.version.outputs.TAG_VERSION }}) doesn't match version in project (${{ steps.version.outputs.SQL_RUNNER_VERSION }})"
        exit 1

    - name: Make release assets
      run: make release

    - name: Get date for release name
      id: date
      run: echo "RELEASE_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        name: Version ${{ github.ref }} (${{ env.RELEASE_DATE }})
        draft: false
        prerelease: ${{ contains(steps.version.outputs.TAG_VERSION, '-rc') }}

    - name: Upload release assets
      uses: alexellis/upload-assets@0.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        asset_paths: '["./build/dist/*"]'
